// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Threading.Tasks;

using Foundation;
using UIKit;
using IO.Swagger.Model;
using ReisekostenNative.Services;

namespace ReisekostenNative.iOS
{
    public partial class BelegNeuTableView : UITableView
	{
        public BelegNeuTableView (IntPtr handle) : base (handle)
        {
        }

        string user = "";

        public void initTableView() {
            datum.MaximumDate = new NSDate();
            datumValue.Text = "";
            artValue.Text = "";
            beschreibung.Text = "";
            beschreibungValue.Text = "...";
            art.Model = new ArtenPickerViewModel();
            UIService.Instance.GetBelegarten((o) => setArten(o));
        }

        private void setArten(Task<List<string>> o)
        {
            ((ArtenPickerViewModel)art.Model).setArten(o.Result, artValue);
            art.ReloadComponent(0);
        }

        public bool hasImage() {
            return beleg != null && beleg.Image != null;
        }

        public bool hasBeschreibung() {
            return beschreibung != null && beschreibung.Text != null && beschreibung.Text.Length > 0;
        }

        public bool isDataValid()
        {
            return isOK(datumValue) && isOK(artValue) && isOK(bezeichnung) && isOK(betrag);
        }

        private bool isOK(UILabel label) {
            return label != null && label.Text != null && label.Text.Length > 0;
        }

        private bool isOK(UITextField textField)
        {
            return textField != null && textField.Text != null && textField.Text.Length > 0;
        }

        public Beleg getToSaveBeleg() {
            var toSaveBeleg = new Beleg();
            toSaveBeleg.User = user;
            toSaveBeleg.Betrag = Convert.ToInt64(betrag.Text);
            toSaveBeleg.Description = beschreibung.Text;
            toSaveBeleg.Label = bezeichnung.Text;
            return toSaveBeleg;
        }

        public void setUser(string newUser)
        {
            user = newUser;
        }

        public void setSavedBeleg(Beleg newBeleg)
        {
            string iconname = "navbaritem_plus";
            if(newBeleg != null) {
                betrag.Text = Convert.ToString(newBeleg.Betrag.Value);
                beschreibung.Text = newBeleg.Description;
                bezeichnung.Text = newBeleg.Label;
                if (newBeleg.Status == Beleg.StatusEnum.ABGELEHNT) 
                {
                    iconname = "navbaritem_cancel";
                }
                else if (newBeleg.Status == Beleg.StatusEnum.EXPORTIERT)
                {
                    iconname = "navbaritem_save";
                }
                else if (newBeleg.Status == Beleg.StatusEnum.GEBUCHT)
                {
                    iconname = "navbaritem_cash";
                }
            }
            status.Image = UIImage.FromBundle(iconname);
        }

        public class ArtenPickerViewModel : UIPickerViewModel
        {

            List<string> arten = new List<string>();
            UILabel artVal = new UILabel();

            public void setArten(List<string> newArten, UILabel newArtVal)
            {
                arten = newArten;
                artVal = newArtVal;
            }

            public override nint GetRowsInComponent(UIPickerView pickerView, nint component)
            {
                return arten.Count;
            }

            public override string GetTitle(UIPickerView pickerView, nint row, nint component)
            {
                return arten[(int)row];
            }

            public override nint GetComponentCount(UIPickerView pickerView)
            {
                return 1;
            }

            public override void Selected(UIPickerView pickerView, nint row, nint component)
            {
                artVal.Text = arten[(int)row];
            }

        }

        partial void datumValueChanged(NSObject sender)
        {
            var formatter = new NSDateFormatter();
            formatter.DateFormat = "dd.MM.yyyy";
            datumValue.Text = formatter.StringFor(datum.Date);
        }

        partial void belegButtonPerformed(NSObject sender)
        {

        }
	}
}
