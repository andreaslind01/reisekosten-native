/* 
 * Swagger documentation for belegerfassung-ui
 *
 * Backend for Xamarin Hackathon
 *
 * OpenAPI spec version: 1.0.0-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SQLite;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Beleg
    /// </summary>
    [DataContract]
    public partial class Beleg
    {
        /// <summary>
        /// Status des Beleges
        /// </summary>
        /// <value>Status des Beleges</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {

            /// <summary>
            /// Enum ERFASST for "ERFASST"
            /// </summary>
            [EnumMember(Value = "ERFASST")]
            ERFASST,

            /// <summary>
            /// Enum EXPORTIERT for "EXPORTIERT"
            /// </summary>
            [EnumMember(Value = "EXPORTIERT")]
            EXPORTIERT,

            /// <summary>
            /// Enum GEBUCHT for "GEBUCHT"
            /// </summary>
            [EnumMember(Value = "GEBUCHT")]
            GEBUCHT,

            /// <summary>
            /// Enum ABGELEHNT for "ABGELEHNT"
            /// </summary>
            [EnumMember(Value = "ABGELEHNT")]
            ABGELEHNT
        }

        /// <summary>
        /// Status des Beleges
        /// </summary>
        /// <value>Status des Beleges</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public StatusEnum? Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Beleg" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public Beleg() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Beleg" /> class.
        /// </summary>
        /// <param name="Belegnummer">Id des Beleges (required).</param>
        /// <param name="Description">Beschreibung des Beleges (required).</param>
        /// <param name="Date">Belegdatum (required).</param>
        /// <param name="Type">Art des Beleges (required).</param>
        /// <param name="Betrag">Betrag des Beleges (required).</param>
        /// <param name="Status">Status des Beleges (required).</param>
        /// <param name="Thumbnail">Thumbnail-Darstellung des Beleges.</param>
        /// <param name="BelegSize">Groesse des Beleges.</param>
        public Beleg(int? Belegnummer = default(int?), string Description = default(string), DateTime? Date = default(DateTime?), string Type = default(string), long? Betrag = default(long?), StatusEnum? Status = default(StatusEnum?), byte[] Thumbnail = default(byte[]), byte[] BelegImage = default(byte[]), long? BelegSize = default(long?), string User = null)
        {
            this.Belegnummer = Belegnummer;
            this.Description = Description;
            this.Date = Date;
            this.Type = Type;
            this.Betrag = Betrag;
            this.Status = Status;
            this.Thumbnail = Thumbnail;
            this.BelegImage = BelegImage;
            this.BelegSize = BelegSize;
            this.User = User;
        }

        /// <summary>
        /// Datenbank-ID des Beleges
        /// </summary>
        /// <value>Datenbank-ID des Beleges</value>
        [PrimaryKey, AutoIncrement]
        [JsonIgnore]
        public int? BelegID { get; set; }

        /// <summary>
        /// Die vom Service vergebene Belegnummer
        /// </summary>
        /// <value>Die vom Service vergebene Belegnummer</value>
        [DataMember(Name = "belegnummer", EmitDefaultValue = false)]
        public int? Belegnummer { get; set; }

        /// <summary>
        /// Beschreibung des Beleges
        /// </summary>
        /// <value>Beschreibung des Beleges</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Belegdatum
        /// </summary>
        /// <value>Belegdatum</value>
        [DataMember(Name = "date", EmitDefaultValue = false)]
        public DateTime? Date { get; set; }

        /// <summary>
        /// Art des Beleges
        /// </summary>
        /// <value>Art des Beleges</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Betrag des Beleges
        /// </summary>
        /// <value>Betrag des Beleges</value>
        [DataMember(Name = "betrag", EmitDefaultValue = false)]
        public long? Betrag { get; set; }


        /// <summary>
        /// Thumbnail-Darstellung des Beleges
        /// </summary>
        /// <value>Thumbnail-Darstellung des Beleges</value>
        [DataMember(Name = "thumbnail", EmitDefaultValue = false)]
        public byte[] Thumbnail { get; set; }

        /// <summary>
        /// Beleg-Bild
        /// </summary>
        /// <value>Beleg-Bild</value>
        [JsonIgnore]
        public byte[] BelegImage { get; set; }

        /// <summary>
        /// Groesse des Beleges
        /// </summary>
        /// <value>Groesse des Beleges</value>
        [DataMember(Name = "belegSize", EmitDefaultValue = false)]
        public long? BelegSize { get; set; }

        [JsonIgnore]
        public string User { get; set; }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }
    }

}
